[2023-10-20 16:05:25,031-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 16:05:25,031-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": " /home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/root/SIamCART_sf/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 16:05:26,770-rk0-model_load.py# 48] load pretrained model from /root/SIamCART_sf/pretrained_models/resnet50.model
[2023-10-20 16:06:49,693-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 16:06:49,694-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": " /home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/ home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model ",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 16:06:51,391-rk0-model_load.py# 48] load pretrained model from / home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model 
[2023-10-20 16:06:59,411-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 16:06:59,411-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": " /home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model ",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 16:07:01,050-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model 
[2023-10-20 16:07:19,414-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 16:07:19,414-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": " /home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 16:07:21,097-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 16:07:21,222-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 16:07:21,222-rk0-model_load.py# 33] used keys:265
[2023-10-20 16:07:21,229-rk0-train.py# 59] build train dataset
[2023-10-20 16:07:21,229-rk0-dataset.py# 42] loading GTOT
[2023-10-20 16:07:21,229-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 16:07:21,232-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 16:07:21,488-rk0-dataset.py#275] shuffle done!
[2023-10-20 16:07:21,488-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 16:07:21,522-rk0-train.py# 62] build dataset done
[2023-10-20 16:07:21,527-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 16:07:21,528-rk0-train.py#307] model prepare done
[2023-10-20 16:07:21,529-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 16:09:29,003-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 16:09:29,006-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": " /home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 16:09:30,679-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 16:09:30,783-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 16:09:30,784-rk0-model_load.py# 33] used keys:265
[2023-10-20 16:09:30,794-rk0-train.py# 59] build train dataset
[2023-10-20 16:09:30,795-rk0-dataset.py# 42] loading GTOT
[2023-10-20 16:09:30,796-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 16:09:30,798-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 16:09:31,049-rk0-dataset.py#275] shuffle done!
[2023-10-20 16:09:31,049-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 16:09:31,082-rk0-train.py# 62] build dataset done
[2023-10-20 16:09:31,117-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 16:09:31,117-rk0-train.py#307] model prepare done
[2023-10-20 16:09:31,124-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 16:09:57,928-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 16:09:57,930-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 16:09:59,564-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 16:09:59,650-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 16:09:59,651-rk0-model_load.py# 33] used keys:265
[2023-10-20 16:09:59,661-rk0-train.py# 59] build train dataset
[2023-10-20 16:09:59,661-rk0-dataset.py# 42] loading GTOT
[2023-10-20 16:09:59,662-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 16:09:59,665-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 16:09:59,939-rk0-dataset.py#275] shuffle done!
[2023-10-20 16:09:59,939-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 16:09:59,974-rk0-train.py# 62] build dataset done
[2023-10-20 16:10:00,008-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 16:10:00,009-rk0-train.py#307] model prepare done
[2023-10-20 16:10:00,016-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 16:11:37,117-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 16:11:37,120-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 16:11:38,811-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 16:11:38,902-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 16:11:38,903-rk0-model_load.py# 33] used keys:265
[2023-10-20 16:11:38,914-rk0-train.py# 59] build train dataset
[2023-10-20 16:11:38,915-rk0-dataset.py# 42] loading GTOT
[2023-10-20 16:11:38,915-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 16:11:38,918-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 16:11:39,179-rk0-dataset.py#275] shuffle done!
[2023-10-20 16:11:39,179-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 16:11:39,214-rk0-train.py# 62] build dataset done
[2023-10-20 16:11:39,250-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 16:11:39,251-rk0-train.py#307] model prepare done
[2023-10-20 16:11:39,258-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 16:17:29,239-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 16:17:29,241-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 16:17:30,923-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 16:17:31,019-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 16:17:31,020-rk0-model_load.py# 33] used keys:265
[2023-10-20 16:17:31,029-rk0-train.py# 59] build train dataset
[2023-10-20 16:17:31,030-rk0-dataset.py# 42] loading GTOT
[2023-10-20 16:17:31,031-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 16:17:31,033-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 16:17:31,284-rk0-dataset.py#275] shuffle done!
[2023-10-20 16:17:31,284-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 16:17:31,319-rk0-train.py# 62] build dataset done
[2023-10-20 16:17:31,355-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 16:17:31,355-rk0-train.py#307] model prepare done
[2023-10-20 16:17:31,362-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 16:17:49,865-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 16:17:49,868-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 16:17:51,501-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 16:17:51,593-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 16:17:51,594-rk0-model_load.py# 33] used keys:265
[2023-10-20 16:17:51,604-rk0-train.py# 59] build train dataset
[2023-10-20 16:17:51,604-rk0-dataset.py# 42] loading GTOT
[2023-10-20 16:17:51,605-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 16:17:51,608-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 16:17:51,857-rk0-dataset.py#275] shuffle done!
[2023-10-20 16:17:51,857-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 16:17:51,891-rk0-train.py# 62] build dataset done
[2023-10-20 16:17:51,923-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 16:17:51,924-rk0-train.py#307] model prepare done
[2023-10-20 16:17:51,930-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 16:18:07,575-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 16:18:07,577-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 16:18:09,184-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 16:18:09,268-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 16:18:09,269-rk0-model_load.py# 33] used keys:265
[2023-10-20 16:18:09,279-rk0-train.py# 59] build train dataset
[2023-10-20 16:18:09,279-rk0-dataset.py# 42] loading GTOT
[2023-10-20 16:18:09,280-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 16:18:09,283-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 16:18:09,541-rk0-dataset.py#275] shuffle done!
[2023-10-20 16:18:09,541-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 16:18:09,574-rk0-train.py# 62] build dataset done
[2023-10-20 16:18:09,609-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 16:18:09,609-rk0-train.py#307] model prepare done
[2023-10-20 16:18:09,617-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 16:18:30,103-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 16:18:30,105-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 16:18:31,778-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 16:18:31,866-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 16:18:31,867-rk0-model_load.py# 33] used keys:265
[2023-10-20 16:18:31,877-rk0-train.py# 59] build train dataset
[2023-10-20 16:18:31,878-rk0-dataset.py# 42] loading GTOT
[2023-10-20 16:18:31,879-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 16:18:31,881-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 16:18:32,126-rk0-dataset.py#275] shuffle done!
[2023-10-20 16:18:32,127-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 16:18:32,160-rk0-train.py# 62] build dataset done
[2023-10-20 16:18:32,195-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 16:18:32,196-rk0-train.py#307] model prepare done
[2023-10-20 16:18:32,204-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:17:33,390-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:17:33,392-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:17:35,056-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:17:35,202-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:17:35,203-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:17:35,214-rk0-train.py# 59] build train dataset
[2023-10-20 17:17:35,214-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:17:35,215-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:17:35,218-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:17:35,469-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:17:35,469-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:17:35,507-rk0-train.py# 62] build dataset done
[2023-10-20 17:17:35,542-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:17:35,543-rk0-train.py#307] model prepare done
[2023-10-20 17:17:35,550-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:17:52,280-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:17:52,282-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:17:53,923-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:17:54,016-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:17:54,017-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:17:54,027-rk0-train.py# 59] build train dataset
[2023-10-20 17:17:54,027-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:17:54,028-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:17:54,031-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:17:54,283-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:17:54,284-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:17:54,319-rk0-train.py# 62] build dataset done
[2023-10-20 17:17:54,352-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:17:54,353-rk0-train.py#307] model prepare done
[2023-10-20 17:17:54,360-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:18:47,579-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:18:47,582-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:18:49,209-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:18:49,296-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:18:49,297-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:18:49,306-rk0-train.py# 59] build train dataset
[2023-10-20 17:18:49,307-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:18:49,308-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:18:49,310-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:18:49,567-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:18:49,568-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:18:49,601-rk0-train.py# 62] build dataset done
[2023-10-20 17:18:49,635-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:18:49,636-rk0-train.py#307] model prepare done
[2023-10-20 17:18:49,644-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:19:14,050-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:19:14,052-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:19:16,429-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:19:16,429-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:19:18,098-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:19:18,179-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:19:18,180-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:19:18,189-rk0-train.py# 59] build train dataset
[2023-10-20 17:19:18,189-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:19:18,189-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:19:18,191-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:19:18,453-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:19:18,453-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:19:18,490-rk0-train.py# 62] build dataset done
[2023-10-20 17:19:18,493-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:19:18,493-rk0-train.py#307] model prepare done
[2023-10-20 17:19:18,495-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:20:12,779-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:20:12,779-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:20:14,443-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:20:14,525-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:20:14,526-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:20:14,532-rk0-train.py# 59] build train dataset
[2023-10-20 17:20:14,532-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:20:14,532-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:20:14,534-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:20:14,824-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:20:14,824-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:20:14,875-rk0-train.py# 62] build dataset done
[2023-10-20 17:20:14,879-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:20:14,879-rk0-train.py#307] model prepare done
[2023-10-20 17:20:14,881-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:20:29,122-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:20:29,122-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 1,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:20:30,771-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:20:30,853-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:20:30,854-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:20:30,860-rk0-train.py# 59] build train dataset
[2023-10-20 17:20:30,860-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:20:30,860-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:20:30,862-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:20:31,112-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:20:31,112-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:20:31,145-rk0-train.py# 62] build dataset done
[2023-10-20 17:20:31,148-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:20:31,149-rk0-train.py#307] model prepare done
[2023-10-20 17:20:31,150-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:20:42,259-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:20:42,260-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:20:43,908-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:20:43,988-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:20:43,988-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:20:43,995-rk0-train.py# 59] build train dataset
[2023-10-20 17:20:43,995-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:20:43,995-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:20:43,997-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:20:44,257-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:20:44,257-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:20:44,291-rk0-train.py# 62] build dataset done
[2023-10-20 17:20:44,293-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:20:44,294-rk0-train.py#307] model prepare done
[2023-10-20 17:20:44,295-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:21:09,874-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:21:09,877-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:21:11,533-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:21:11,621-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:21:11,622-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:21:11,632-rk0-train.py# 59] build train dataset
[2023-10-20 17:21:11,632-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:21:11,633-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:21:11,636-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:21:11,890-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:21:11,890-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:21:11,926-rk0-train.py# 62] build dataset done
[2023-10-20 17:21:11,964-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:21:11,965-rk0-train.py#307] model prepare done
[2023-10-20 17:21:11,973-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:22:22,955-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:22:22,957-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:22:24,615-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:22:24,700-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:22:24,701-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:22:24,711-rk0-train.py# 59] build train dataset
[2023-10-20 17:22:24,711-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:22:24,712-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:22:24,715-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:22:24,976-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:22:24,976-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:22:25,011-rk0-train.py# 62] build dataset done
[2023-10-20 17:22:25,047-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:22:25,048-rk0-train.py#307] model prepare done
[2023-10-20 17:22:25,055-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:22:45,043-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:22:45,044-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:22:48,542-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:22:48,544-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:22:50,177-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:22:50,264-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:22:50,265-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:22:50,275-rk0-train.py# 59] build train dataset
[2023-10-20 17:22:50,275-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:22:50,276-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:22:50,279-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:22:50,542-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:22:50,542-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:22:50,578-rk0-train.py# 62] build dataset done
[2023-10-20 17:22:50,611-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:22:50,612-rk0-train.py#307] model prepare done
[2023-10-20 17:22:50,620-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:22:59,936-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:22:59,938-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:23:01,657-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:23:01,740-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:23:01,741-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:23:01,751-rk0-train.py# 59] build train dataset
[2023-10-20 17:23:01,752-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:23:01,752-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:23:01,755-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:23:02,004-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:23:02,004-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:23:02,039-rk0-train.py# 62] build dataset done
[2023-10-20 17:23:02,073-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:23:02,074-rk0-train.py#307] model prepare done
[2023-10-20 17:23:02,081-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:24:25,731-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:24:25,733-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:24:27,377-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:24:27,462-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:24:27,463-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:24:27,473-rk0-train.py# 59] build train dataset
[2023-10-20 17:24:27,473-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:24:27,474-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:24:27,477-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:24:27,738-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:24:27,738-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:24:27,771-rk0-train.py# 62] build dataset done
[2023-10-20 17:24:27,805-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:24:27,806-rk0-train.py#307] model prepare done
[2023-10-20 17:24:27,813-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:24:34,176-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:24:34,178-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:24:35,790-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:24:35,874-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:24:35,875-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:24:35,885-rk0-train.py# 59] build train dataset
[2023-10-20 17:24:35,885-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:24:35,887-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:24:35,889-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:24:36,167-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:24:36,168-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:24:36,202-rk0-train.py# 62] build dataset done
[2023-10-20 17:24:36,237-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:24:36,238-rk0-train.py#307] model prepare done
[2023-10-20 17:24:36,245-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:24:45,248-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:24:45,250-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:24:46,880-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:24:46,967-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:24:46,968-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:24:46,979-rk0-train.py# 59] build train dataset
[2023-10-20 17:24:46,979-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:24:46,980-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:24:46,983-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:24:47,238-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:24:47,239-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:24:47,272-rk0-train.py# 62] build dataset done
[2023-10-20 17:24:47,307-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:24:47,308-rk0-train.py#307] model prepare done
[2023-10-20 17:24:47,315-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:26:55,072-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:26:55,074-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:26:56,702-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:26:56,793-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:26:56,794-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:26:56,804-rk0-train.py# 59] build train dataset
[2023-10-20 17:26:56,804-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:26:56,805-rk0-dataset.py# 79] GTOT loaded
[2023-10-20 17:26:56,807-rk0-dataset.py#120] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:26:57,048-rk0-dataset.py#275] shuffle done!
[2023-10-20 17:26:57,048-rk0-dataset.py#276] dataset length 12000000
[2023-10-20 17:26:57,082-rk0-train.py# 62] build dataset done
[2023-10-20 17:26:57,116-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:26:57,117-rk0-train.py#307] model prepare done
[2023-10-20 17:26:57,124-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:32:38,692-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:32:38,694-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT_jpg",
            "LIST": "/home/xiancong/Data_set/GTOT_jpg/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:32:40,296-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:32:40,380-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:32:40,381-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:32:40,391-rk0-train.py# 59] build train dataset
[2023-10-20 17:32:40,391-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:32:40,392-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:32:40,394-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:32:40,653-rk0-dataset.py#281] shuffle done!
[2023-10-20 17:32:40,653-rk0-dataset.py#282] dataset length 12000000
[2023-10-20 17:32:40,686-rk0-train.py# 62] build dataset done
[2023-10-20 17:32:40,719-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:32:40,720-rk0-train.py#307] model prepare done
[2023-10-20 17:32:40,727-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:33:09,239-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:33:09,241-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:33:10,856-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:33:10,942-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:33:10,943-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:33:10,954-rk0-train.py# 59] build train dataset
[2023-10-20 17:33:10,954-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:33:10,955-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:33:10,957-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:33:11,231-rk0-dataset.py#281] shuffle done!
[2023-10-20 17:33:11,231-rk0-dataset.py#282] dataset length 12000000
[2023-10-20 17:33:11,263-rk0-train.py# 62] build dataset done
[2023-10-20 17:33:11,296-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:33:11,297-rk0-train.py#307] model prepare done
[2023-10-20 17:33:11,304-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:33:35,898-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:33:35,900-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:33:37,531-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:33:37,618-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:33:37,619-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:33:37,629-rk0-train.py# 59] build train dataset
[2023-10-20 17:33:37,629-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:33:37,630-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:33:37,633-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:33:37,890-rk0-dataset.py#281] shuffle done!
[2023-10-20 17:33:37,890-rk0-dataset.py#282] dataset length 12000000
[2023-10-20 17:33:37,923-rk0-train.py# 62] build dataset done
[2023-10-20 17:33:37,958-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:33:37,958-rk0-train.py#307] model prepare done
[2023-10-20 17:33:37,966-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:33:58,044-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:33:58,046-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:33:59,657-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:33:59,743-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:33:59,744-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:33:59,754-rk0-train.py# 59] build train dataset
[2023-10-20 17:33:59,754-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:33:59,755-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:33:59,757-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:34:00,008-rk0-dataset.py#281] shuffle done!
[2023-10-20 17:34:00,008-rk0-dataset.py#282] dataset length 12000000
[2023-10-20 17:34:00,042-rk0-train.py# 62] build dataset done
[2023-10-20 17:34:00,079-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:34:00,080-rk0-train.py#307] model prepare done
[2023-10-20 17:34:00,089-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:39:03,883-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:39:03,885-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:39:05,503-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:39:05,587-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:39:05,588-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:39:05,597-rk0-train.py# 59] build train dataset
[2023-10-20 17:39:05,598-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:39:05,599-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:39:05,601-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:39:05,857-rk0-dataset.py#295] shuffle done!
[2023-10-20 17:39:05,857-rk0-dataset.py#296] dataset length 12000000
[2023-10-20 17:39:05,892-rk0-train.py# 62] build dataset done
[2023-10-20 17:39:05,929-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:39:05,929-rk0-train.py#307] model prepare done
[2023-10-20 17:39:05,937-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:39:10,869-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:39:10,871-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:39:12,551-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:39:12,642-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:39:12,643-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:39:12,653-rk0-train.py# 59] build train dataset
[2023-10-20 17:39:12,654-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:39:12,655-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:39:12,657-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:39:12,902-rk0-dataset.py#295] shuffle done!
[2023-10-20 17:39:12,902-rk0-dataset.py#296] dataset length 12000000
[2023-10-20 17:39:12,937-rk0-train.py# 62] build dataset done
[2023-10-20 17:39:12,972-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:39:12,972-rk0-train.py#307] model prepare done
[2023-10-20 17:39:12,980-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:39:28,995-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:39:28,997-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:39:30,638-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:39:30,726-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:39:30,727-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:39:30,737-rk0-train.py# 59] build train dataset
[2023-10-20 17:39:30,738-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:39:30,738-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:39:30,741-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:39:31,005-rk0-dataset.py#295] shuffle done!
[2023-10-20 17:39:31,005-rk0-dataset.py#296] dataset length 12000000
[2023-10-20 17:39:31,039-rk0-train.py# 62] build dataset done
[2023-10-20 17:39:31,072-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:39:31,073-rk0-train.py#307] model prepare done
[2023-10-20 17:39:31,080-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:39:36,238-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:39:36,240-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:39:37,883-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:39:37,970-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:39:37,971-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:39:37,981-rk0-train.py# 59] build train dataset
[2023-10-20 17:39:37,981-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:39:37,982-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:39:37,985-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:39:38,244-rk0-dataset.py#295] shuffle done!
[2023-10-20 17:39:38,244-rk0-dataset.py#296] dataset length 12000000
[2023-10-20 17:39:38,277-rk0-train.py# 62] build dataset done
[2023-10-20 17:39:38,312-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:39:38,313-rk0-train.py#307] model prepare done
[2023-10-20 17:39:38,320-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:39:56,858-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:39:56,861-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:39:58,507-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:39:58,592-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:39:58,593-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:39:58,602-rk0-train.py# 59] build train dataset
[2023-10-20 17:39:58,603-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:39:58,603-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:39:58,606-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:39:58,858-rk0-dataset.py#295] shuffle done!
[2023-10-20 17:39:58,858-rk0-dataset.py#296] dataset length 12000000
[2023-10-20 17:39:58,892-rk0-train.py# 62] build dataset done
[2023-10-20 17:39:58,926-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:39:58,927-rk0-train.py#307] model prepare done
[2023-10-20 17:39:58,934-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:40:04,738-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:40:04,740-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:40:06,373-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:40:06,459-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:40:06,460-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:40:06,470-rk0-train.py# 59] build train dataset
[2023-10-20 17:40:06,470-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:40:06,471-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:40:06,473-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:40:06,729-rk0-dataset.py#295] shuffle done!
[2023-10-20 17:40:06,729-rk0-dataset.py#296] dataset length 12000000
[2023-10-20 17:40:06,762-rk0-train.py# 62] build dataset done
[2023-10-20 17:40:06,796-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:40:06,797-rk0-train.py#307] model prepare done
[2023-10-20 17:40:06,805-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:42:33,429-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:42:33,431-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:42:36,777-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:42:36,779-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:42:38,395-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:42:38,477-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:42:38,478-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:42:38,488-rk0-train.py# 59] build train dataset
[2023-10-20 17:42:38,488-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:42:38,489-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:42:38,492-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:42:38,740-rk0-dataset.py#295] shuffle done!
[2023-10-20 17:42:38,740-rk0-dataset.py#296] dataset length 12000000
[2023-10-20 17:42:38,774-rk0-train.py# 62] build dataset done
[2023-10-20 17:42:38,808-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:42:38,809-rk0-train.py#307] model prepare done
[2023-10-20 17:42:38,816-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:42:56,897-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:42:56,899-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:42:58,555-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:42:58,640-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:42:58,641-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:42:58,651-rk0-train.py# 59] build train dataset
[2023-10-20 17:42:58,651-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:42:58,652-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:42:58,655-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:42:58,909-rk0-dataset.py#295] shuffle done!
[2023-10-20 17:42:58,910-rk0-dataset.py#296] dataset length 12000000
[2023-10-20 17:42:58,944-rk0-train.py# 62] build dataset done
[2023-10-20 17:42:58,977-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:42:58,978-rk0-train.py#307] model prepare done
[2023-10-20 17:42:58,986-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:43:37,696-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:43:37,698-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:43:51,588-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:43:51,590-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:43:53,220-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:43:53,305-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:43:53,306-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:43:53,317-rk0-train.py# 59] build train dataset
[2023-10-20 17:43:53,317-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:43:53,318-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:43:53,320-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:43:53,579-rk0-dataset.py#295] shuffle done!
[2023-10-20 17:43:53,579-rk0-dataset.py#296] dataset length 12000000
[2023-10-20 17:43:53,613-rk0-train.py# 62] build dataset done
[2023-10-20 17:43:53,648-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:43:53,649-rk0-train.py#307] model prepare done
[2023-10-20 17:43:53,658-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:44:27,781-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:44:27,781-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:44:29,414-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:44:29,496-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:44:29,496-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:44:29,503-rk0-train.py# 59] build train dataset
[2023-10-20 17:44:29,503-rk0-dataset.py# 42] loading GTOT
[2023-10-20 17:44:29,503-rk0-dataset.py# 85] GTOT loaded
[2023-10-20 17:44:29,505-rk0-dataset.py#126] GTOT start-index 0 select [100000/50] path_format {}.{}.{}.jpg
[2023-10-20 17:44:29,770-rk0-dataset.py#295] shuffle done!
[2023-10-20 17:44:29,770-rk0-dataset.py#296] dataset length 12000000
[2023-10-20 17:44:29,804-rk0-train.py# 62] build dataset done
[2023-10-20 17:44:29,807-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00424171 0.00359843 0.0030527  0.00258974 0.00219699 0.0018638
 0.00158114 0.00134135 0.00113792 0.00096535 0.00081895 0.00069475
 0.00058938 0.0005    ]
[2023-10-20 17:44:29,807-rk0-train.py#307] model prepare done
[2023-10-20 17:44:29,809-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2023-10-20 17:44:33,878-rk0-train.py#245] Epoch: [1][20/200000] lr: 0.001000
	batch_time: 0.180598 (0.202937)	data_time: 0.066680 (0.070002)
	cen_loss: 0.622817 (0.650824)	cls_loss: 0.692616 (0.691711)
	loc_loss: 1.461120 (2.518192)	total_loss: 5.698793 (8.897112)

[2023-10-20 17:44:33,878-rk0-log_helper.py#105] Progress: 20 / 4000000 [0%], Speed: 0.203 s/iter, ETA 9:09:29 (D:H:M)

[2023-10-20 17:44:37,398-rk0-train.py#245] Epoch: [1][40/200000] lr: 0.001000
	batch_time: 0.182338 (0.189176)	data_time: 0.068559 (0.066452)
	cen_loss: 0.624058 (0.646239)	cls_loss: 0.479069 (0.640413)
	loc_loss: 0.537297 (1.818921)	total_loss: 2.715017 (6.743416)

[2023-10-20 17:44:37,398-rk0-log_helper.py#105] Progress: 40 / 4000000 [0%], Speed: 0.189 s/iter, ETA 8:18:11 (D:H:M)

[2023-10-20 17:46:00,020-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-20 17:46:00,021-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 3,
        "NUM_WORKERS": 0,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "LasHeR",
            "GTOT"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/home/xiancong/Data_set/GTOT",
            "LIST": "/home/xiancong/Data_set/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-20 17:46:01,641-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamCART_self/pretrained_models/resnet50.model
[2023-10-20 17:46:01,725-rk0-model_load.py# 42] remove prefix 'module.'
[2023-10-20 17:46:01,726-rk0-model_load.py# 33] used keys:265
[2023-10-20 17:46:01,732-rk0-train.py# 59] build train dataset
[2023-10-20 17:46:01,733-rk0-dataset.py# 42] loading LasHeR
[2023-10-25 15:47:08,397-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-25 15:47:08,398-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "LasHeR"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/root/autodl-tmp/DataSet/GTOT",
            "LIST": "/root/autodl-tmp/DataSet/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/root/SIamCART_sf/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-25 15:47:10,062-rk0-model_load.py# 48] load pretrained model from /root/SIamCART_sf/pretrained_models/resnet50.model
[2023-10-25 15:49:48,403-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2023-10-25 15:49:48,403-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 20,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "LasHeR"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/root/autodl-tmp/DataSet/GTOT",
            "LIST": "/root/autodl-tmp/DataSet/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/root/SIamCART_sf/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2023-10-25 15:49:50,113-rk0-model_load.py# 48] load pretrained model from /root/SIamCART_sf/pretrained_models/resnet50.model
[2024-04-24 13:10:54,111-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2024-04-24 13:10:54,111-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 13,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "LasHeR",
            "RGBT234"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/root/autodl-tmp/DataSet/GTOT",
            "LIST": "/root/autodl-tmp/DataSet/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": -1
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/root/SIamCART_sf/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2024-04-24 13:10:55,849-rk0-model_load.py# 48] load pretrained model from /root/SIamCART_sf/pretrained_models/resnet50.model
[2024-04-24 13:17:37,043-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2024-04-24 13:17:37,044-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 13,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "LasHeR",
            "RGBT234"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/root/autodl-tmp/DataSet/GTOT",
            "LIST": "/root/autodl-tmp/DataSet/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": -1
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/root/SiamDSACF/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2024-04-24 13:17:38,621-rk0-model_load.py# 48] load pretrained model from /root/SiamDSACF/pretrained_models/resnet50.model
[2024-04-24 13:18:28,359-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2024-04-24 13:18:28,359-rk0-train.py#269] config 
{
    "META_ARC": "siamcar_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 13,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "LasHeR",
            "RGBT234"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/root/autodl-tmp/DataSet/GTOT",
            "LIST": "/root/autodl-tmp/DataSet/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": -1
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamDSACF/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamCARTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2024-04-24 13:18:29,989-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamDSACF/pretrained_models/resnet50.model
[2024-04-24 13:18:30,145-rk0-model_load.py# 42] remove prefix 'module.'
[2024-04-24 13:18:30,145-rk0-model_load.py# 33] used keys:265
[2024-04-24 13:18:30,152-rk0-train.py# 59] build train dataset
[2024-04-24 13:18:30,152-rk0-dataset.py# 42] loading LasHeR
[2024-04-24 13:24:14,600-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2024-04-24 13:24:14,600-rk0-train.py#269] config 
{
    "META_ARC": "siamDSACF_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 13,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "LasHeR",
            "RGBT234"
        ],
        "RGBT234": {
            "ROOT": "/root/autodl-tmp/DataSet/RGBT234",
            "LIST": "/root/autodl-tmp/DataSet/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/root/autodl-tmp/DataSet/GTOT",
            "LIST": "/root/autodl-tmp/DataSet/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": -1
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamDSACF/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamDSACFTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2024-04-24 13:24:16,197-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamDSACF/pretrained_models/resnet50.model
[2024-04-24 13:24:16,279-rk0-model_load.py# 42] remove prefix 'module.'
[2024-04-24 13:24:16,280-rk0-model_load.py# 33] used keys:265
[2024-04-24 13:24:16,288-rk0-train.py# 59] build train dataset
[2024-04-24 13:24:16,288-rk0-dataset.py# 42] loading LasHeR
[2024-04-24 13:35:37,503-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2024-04-24 13:35:37,503-rk0-train.py#269] config 
{
    "META_ARC": "siamDSACF_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 13,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "RGBT234"
        ],
        "RGBT234": {
            "ROOT": "/home/xiancong/Data_set/RGBT234",
            "LIST": "/home/xiancong/Data_set/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/root/autodl-tmp/DataSet/GTOT",
            "LIST": "/root/autodl-tmp/DataSet/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": -1
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamDSACF/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamDSACFTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2024-04-24 13:35:39,074-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamDSACF/pretrained_models/resnet50.model
[2024-04-24 13:35:39,152-rk0-model_load.py# 42] remove prefix 'module.'
[2024-04-24 13:35:39,152-rk0-model_load.py# 33] used keys:265
[2024-04-24 13:35:39,158-rk0-train.py# 59] build train dataset
[2024-04-24 13:35:39,158-rk0-dataset.py# 42] loading RGBT234
[2024-04-24 13:35:39,225-rk0-dataset.py# 85] RGBT234 loaded
[2024-04-24 13:35:39,225-rk0-dataset.py#126] RGBT234 start-index 0 select [234/234] path_format {}.{}.{}.jpg
[2024-04-24 13:35:39,385-rk0-dataset.py#282] shuffle done!
[2024-04-24 13:35:39,385-rk0-dataset.py#283] dataset length 7800000
[2024-04-24 13:35:39,409-rk0-train.py# 62] build dataset done
[2024-04-24 13:35:39,415-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00359843 0.00258974 0.0018638  0.00134135 0.00096535 0.00069475
 0.0005    ]
[2024-04-24 13:35:39,415-rk0-train.py#307] model prepare done
[2024-04-24 13:35:39,417-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
[2024-04-24 14:25:39,433-rk0-train.py#268] Version Information: 
commit : a715ac3da9a83533824b5a6af07f4e6f553caa43
  log  : a715ac3 Initial commit

[2024-04-24 14:25:39,433-rk0-train.py#269] config 
{
    "META_ARC": "siamDSACF_r50",
    "CUDA": true,
    "TRAIN": {
        "EXEMPLAR_SIZE": 127,
        "SEARCH_SIZE": 255,
        "OUTPUT_SIZE": 25,
        "RESUME": "",
        "PRETRAINED": "",
        "LOG_DIR": "./logs",
        "SNAPSHOT_DIR": "./snapshot",
        "EPOCH": 13,
        "START_EPOCH": 0,
        "BATCH_SIZE": 80,
        "NUM_WORKERS": 30,
        "MOMENTUM": 0.9,
        "WEIGHT_DECAY": 0.0001,
        "CLS_WEIGHT": 1.0,
        "LOC_WEIGHT": 3.0,
        "CEN_WEIGHT": 1.0,
        "PRINT_FREQ": 20,
        "LOG_GRADS": false,
        "GRAD_CLIP": 10.0,
        "BASE_LR": 0.005,
        "LR": {
            "TYPE": "log",
            "KWARGS": {
                "start_lr": 0.005,
                "end_lr": 0.0005
            }
        },
        "LR_WARMUP": {
            "WARMUP": true,
            "TYPE": "step",
            "EPOCH": 5,
            "KWARGS": {
                "start_lr": 0.001,
                "end_lr": 0.005,
                "step": 1
            }
        },
        "NUM_CLASSES": 2,
        "NUM_CONVS": 4,
        "PRIOR_PROB": 0.01,
        "LOSS_ALPHA": 0.25,
        "LOSS_GAMMA": 2.0
    },
    "DATASET": {
        "TEMPLATE": {
            "SHIFT": 4,
            "SCALE": 0.05,
            "BLUR": 0.0,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "SEARCH": {
            "SHIFT": 64,
            "SCALE": 0.18,
            "BLUR": 0.2,
            "FLIP": 0.0,
            "COLOR": 1.0
        },
        "NEG": 0.0,
        "GRAY": 0.0,
        "NAMES": [
            "RGBT234"
        ],
        "RGBT234": {
            "ROOT": "/home/xiancong/Data_set/RGBT234",
            "LIST": "/home/xiancong/Data_set/RGBT234/rgbt234.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "LasHeR": {
            "ROOT": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingset",
            "LIST": "/root/autodl-tmp/DataSet/LasHeR/trainSet/trainingsetList_LasHer.txt",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "GTOT": {
            "ROOT": "/root/autodl-tmp/DataSet/GTOT",
            "LIST": "/root/autodl-tmp/DataSet/GTOT/gtot.txt",
            "FRAME_RANGE": 50,
            "NUM_USE": -1
        },
        "VID": {
            "ROOT": "train_dataset/vid/crop511",
            "ANNO": "train_dataset/vid/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": -1
        },
        "YOUTUBEBB": {
            "ROOT": "train_dataset/yt_bb/crop511",
            "ANNO": "train_dataset/yt_bb/train.json",
            "FRAME_RANGE": 3,
            "NUM_USE": -1
        },
        "COCO": {
            "ROOT": "train_dataset/coco/crop511",
            "ANNO": "train_dataset/coco/train2017.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "DET": {
            "ROOT": "train_dataset/det/crop511",
            "ANNO": "train_dataset/det/train.json",
            "FRAME_RANGE": 1,
            "NUM_USE": -1
        },
        "GOT": {
            "ROOT": "train_dataset/got10k/crop511",
            "ANNO": "train_dataset/got10k/train.json",
            "FRAME_RANGE": 50,
            "NUM_USE": 100000
        },
        "LaSOT": {
            "ROOT": "train_dataset/lasot/crop511",
            "ANNO": "train_dataset/lasot/train.json",
            "FRAME_RANGE": 100,
            "NUM_USE": 100000
        },
        "VIDEOS_PER_EPOCH": 600000
    },
    "BACKBONE": {
        "TYPE": "resnet50",
        "KWARGS": {
            "used_layers": [
                2,
                3,
                4
            ]
        },
        "PRETRAINED": "/home/xiancong/Project_all/SiamDSACF/pretrained_models/resnet50.model",
        "TRAIN_LAYERS": [
            "layer2",
            "layer3",
            "layer4"
        ],
        "LAYERS_LR": 0.1,
        "TRAIN_EPOCH": 10
    },
    "ADJUST": {
        "ADJUST": true,
        "KWARGS": {
            "in_channels": [
                512,
                1024,
                2048
            ],
            "out_channels": [
                256,
                256,
                256
            ]
        },
        "TYPE": "AdjustAllLayer"
    },
    "CAR": {
        "TYPE": "MultiCAR",
        "KWARGS": {}
    },
    "TRACK": {
        "TYPE": "SiamDSACFTracker",
        "PENALTY_K": 0.04,
        "WINDOW_INFLUENCE": 0.44,
        "LR": 0.33,
        "EXEMPLAR_SIZE": 127,
        "INSTANCE_SIZE": 255,
        "CONTEXT_AMOUNT": 0.5,
        "STRIDE": 8,
        "SCORE_SIZE": 25,
        "hanming": true,
        "NUM_K": 2,
        "NUM_N": 1,
        "REGION_S": 0.1,
        "REGION_L": 0.44
    },
    "GRAY_RATIO": 0.25,
    "HP_SEARCH": {
        "OTB100": [
            0.35,
            0.2,
            0.45
        ],
        "GOT10K": [
            0.7,
            0.06,
            0.1
        ],
        "UAV123": [
            0.4,
            0.2,
            0.3
        ],
        "LaSOT": [
            0.33,
            0.04,
            0.3
        ],
        "RGBT234": [
            0.35,
            0.2,
            0.45
        ],
        "GTOT": [
            0.7,
            0.06,
            0.1
        ],
        "LasHeR": [
            0.4,
            0.2,
            0.3
        ]
    }
}
[2024-04-24 14:25:41,042-rk0-model_load.py# 48] load pretrained model from /home/xiancong/Project_all/SiamDSACF/pretrained_models/resnet50.model
[2024-04-24 14:25:41,207-rk0-model_load.py# 42] remove prefix 'module.'
[2024-04-24 14:25:41,208-rk0-model_load.py# 33] used keys:265
[2024-04-24 14:25:41,214-rk0-train.py# 59] build train dataset
[2024-04-24 14:25:41,214-rk0-dataset.py# 42] loading RGBT234
[2024-04-24 14:25:41,215-rk0-dataset.py# 85] RGBT234 loaded
[2024-04-24 14:25:41,215-rk0-dataset.py#126] RGBT234 start-index 0 select [234/234] path_format {}.{}.{}.jpg
[2024-04-24 14:25:41,377-rk0-dataset.py#282] shuffle done!
[2024-04-24 14:25:41,377-rk0-dataset.py#283] dataset length 7800000
[2024-04-24 14:25:41,398-rk0-train.py# 62] build dataset done
[2024-04-24 14:25:41,404-rk0-train.py#306] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00359843 0.00258974 0.0018638  0.00134135 0.00096535 0.00069475
 0.0005    ]
[2024-04-24 14:25:41,404-rk0-train.py#307] model prepare done
[2024-04-24 14:25:41,406-rk0-train.py#169] model
.[31mbackbone[0m (ResNet)
         .[31mconv1[0m (Conv2d)
               - weight
         .bn1 (BatchNorm2d)
             - weight
             - bias
         .[31mrelu[0m (ReLU)
         .[31mmaxpool[0m (MaxPool2d)
         .[31mlayer1[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer2[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer3[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m3[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m4[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m5[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
         .[31mlayer4[0m (Sequential)
                .[31m0[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                  .[31mdownsample[0m (Sequential)
                             .[31m0[0m (Conv2d)
                               - weight
                             .1 (BatchNorm2d)
                               - weight
                               - bias
                .[31m1[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
                .[31m2[0m (Bottleneck)
                  .[31mconv1[0m (Conv2d)
                        - weight
                  .bn1 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv2[0m (Conv2d)
                        - weight
                  .bn2 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mconv3[0m (Conv2d)
                        - weight
                  .bn3 (BatchNorm2d)
                      - weight
                      - bias
                  .[31mrelu[0m (ReLU)
.[31mneck[0m (AdjustAllLayer)
     .[31mdownsample2[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample3[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
     .[31mdownsample4[0m (AdjustLayer)
                 .[31mdownsample[0m (Sequential)
                            .[31m0[0m (Conv2d)
                              - [31mweight[0m
                            .[31m1[0m (BatchNorm2d)
                              - [31mweight[0m
                              - [31mbias[0m
.[31mtemplate_attention_block[0m (GlobalAttentionBlock)
                         .[31mavg_pool[0m (AdaptiveAvgPool2d)
                         .[31mfc[0m (Sequential)
                            .[31m0[0m (Linear)
                              - [31mweight[0m
                            .[31m1[0m (ReLU)
                            .[31m2[0m (Linear)
                              - [31mweight[0m
                            .[31m3[0m (Sigmoid)
.[31mdetection_attention_block[0m (CBAM)
                          .[31mChannelGate[0m (ChannelGate)
                                      .[31mmlp[0m (Sequential)
                                          .[31m0[0m (Flatten)
                                          .[31m1[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                                          .[31m2[0m (ReLU)
                                          .[31m3[0m (Linear)
                                            - [31mweight[0m
                                            - [31mbias[0m
                          .[31mSpatialGate_rgb[0m (SpatialGate)
                                          .[31mcompress[0m (ChannelPool)
                                          .[31mspatial[0m (BasicConv)
                                                  .[31mconv[0m (Conv2d)
                                                       - [31mweight[0m
                                                  .[31mbn[0m (BatchNorm2d)
                                                     - [31mweight[0m
                                                     - [31mbias[0m
                          .[31mSpatialGate_t[0m (SpatialGate)
                                        .[31mcompress[0m (ChannelPool)
                                        .[31mspatial[0m (BasicConv)
                                                .[31mconv[0m (Conv2d)
                                                     - [31mweight[0m
                                                .[31mbn[0m (BatchNorm2d)
                                                   - [31mweight[0m
                                                   - [31mbias[0m
.[31mfeature_fusion[0m (RGBT_fusion)
               .[31mavg_pool[0m (AdaptiveAvgPool2d)
               .[31mfc[0m (Sequential)
                  .[31m0[0m (Linear)
                    - [31mweight[0m
                  .[31m1[0m (Sigmoid)
               .[31mcv[0m (Conv2d)
                  - [31mweight[0m
                  - [31mbias[0m
.[31mcar_head[0m (CARHead)
         .[31mcls_tower[0m (Sequential)
                   .[31m0[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m1[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m2[0m (ReLU)
                   .[31m3[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m4[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m5[0m (ReLU)
                   .[31m6[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m7[0m (GroupNorm)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m8[0m (ReLU)
                   .[31m9[0m (Conv2d)
                     - [31mweight[0m
                     - [31mbias[0m
                   .[31m10[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                   .[31m11[0m (ReLU)
         .[31mbbox_tower[0m (Sequential)
                    .[31m0[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m1[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m2[0m (ReLU)
                    .[31m3[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m4[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m5[0m (ReLU)
                    .[31m6[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m7[0m (GroupNorm)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m8[0m (ReLU)
                    .[31m9[0m (Conv2d)
                      - [31mweight[0m
                      - [31mbias[0m
                    .[31m10[0m (GroupNorm)
                       - [31mweight[0m
                       - [31mbias[0m
                    .[31m11[0m (ReLU)
         .[31mcls_logits[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
         .[31mbbox_pred[0m (Conv2d)
                   - [31mweight[0m
                   - [31mbias[0m
         .[31mcenterness[0m (Conv2d)
                    - [31mweight[0m
                    - [31mbias[0m
.[31mdown[0m (ConvTranspose2d)
     - [31mweight[0m
     - [31mbias[0m
